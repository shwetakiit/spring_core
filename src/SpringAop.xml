<?xml version="1.0" encoding="UTF-8"?>
 
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/aop   
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">  
   
   <aop:aspectj-autoproxy/>    
 <bean name="triangle" class="kumari.aop.model.Triangle">
 <property name="name" value="Triangle shape" ></property>
 </bean>
 
 <bean name="circle" class="kumari.aop.model.Circle">
 <property name="name" value=" Circle shape"></property>
 </bean>
 
 <bean name= "shapeService" class="kumari.aop.service.ShapeService" autowire="byName" />
<bean name="loggingAspect" class="kumari.aop.aspect.LoggingAspect" />
<bean name="loggingAspect1" class="kumari.aop.aspect.LoggingAspect1" />

<!-- Defining bean for logging aspect -->
<bean name="loggingAspect2" class="kumari.aop.aspect.LoggingAspectWithoutAnnotation" />
<!--  Configure aspect -->
<aop:config>
<aop:aspect id="loggingAspect" ref="loggingAspect2" > <!-- @aspect -->
<aop:pointcut id="allGetters" expression="execution(public String getName())"/><!--  -->
<aop:around pointcut-ref="allGetters" method="myAroundAdive"/>

</aop:aspect>

</aop:config>

</beans>